@model IGrouping<DateTime, Sale>[]

@{ ViewBag.Title = "Sales statistics"; }

<h2 class="text-center my-4">Sales statistics</h2>
<form asp-action="Statistics">
    <div class="row row-cols-auto align-items-center">
        <div class="col">
            <div class="form-floating">
                <input name="from" class="form-control" placeholder="From" type="date">
                <label>From</label>
            </div>
        </div>

        <div class="col">
            <div class="form-floating">
                <input name="to" class="form-control" placeholder="To" type="date">
                <label>To</label>
            </div>
        </div>

        <div class="col">
            <button class="btn btn-success" type="submit">Filter</button>
        </div>
    </div>
</form>

<div class="d-flex shadow-lg m-5 p-3 justify-content-center align-content-center">
    @if (!Model.Any())
    {
        <h3 class="text-center text-danger">There are no sales yet</h3>
    }
    else
    {
        ViewBag.Dates = Model.Select(sales => sales.Key.ToShortDateString()).ToArray();
        ViewBag.Counts = Model.Select(sales => sales.Count()).ToArray();

        <div>
            <canvas id="my_sales_chart" width="400px" height="400px">
            </canvas>
        </div>
    }
</div>

<script src="~/lib/Chart.js/chart.umd.js"></script>
<script>
@{
    var labels = JsonSerializer.Serialize(ViewBag.Dates as string[]);
    var data = JsonSerializer.Serialize(ViewBag.Counts as int[]);
}

const ctx = document.querySelector('#my_sales_chart');

let chart = new Chart(ctx,
    {
        type: 'line',
        data: {
            labels: @(Html.Raw(labels)),
            datasets: [{
                label: 'Count of Sales',
                data: @(Html.Raw(data)),
                borderWidth: 4
            }]
        }
    });
</script>